//
//  PhotoSectionModel.swift
//  ModelGen
//
//  Generated by [ModelGen](https://github.com/hebertialmeida/ModelGen)
//  Copyright Â© 2020 ModelGen. All rights reserved.
//

import Foundation
import RocketData

public struct PhotoSectionModel: Codable, Equatable {
    public let date: Date
    public let id: String
    public let photos: [Photo]

    private enum CodingKeys: String, CodingKey {
        case date
        case id
        case photos
    }
}

// MARK: - Equatable

public func == (lhs: PhotoSectionModel, rhs: PhotoSectionModel) -> Bool {
    guard lhs.date == rhs.date else { return false }
    guard lhs.id == rhs.id else { return false }
    guard lhs.photos == rhs.photos else { return false }
    return true
}

// MARK: - Identifiable

extension PhotoSectionModel: Identifiable { }

// MARK: - RocketData

extension PhotoSectionModel: Model {
    public func map(_ transform: (Model) -> Model?) -> PhotoSectionModel? {
        let photos = self.photos.compactMap { transform($0) as? Photo }
        return PhotoSectionModel(date: date, id: id, photos: photos)
    }

    public func forEach(_ visit: (Model) -> Void) {
        photos.forEach(visit)
    }
}