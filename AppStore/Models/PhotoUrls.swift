//
//  PhotoUrls.swift
//  ModelGen
//
//  Generated by [ModelGen](https://github.com/hebertialmeida/ModelGen)
//  Copyright Â© 2020 ModelGen. All rights reserved.
//

import Foundation
import RocketData

public struct PhotoUrls: Codable, Equatable {
    public let full: URL
    public let raw: URL
    public let regular: URL
    public let small: URL
    public let thumb: URL

    private enum CodingKeys: String, CodingKey {
        case full
        case raw
        case regular
        case small
        case thumb
    }
}

// MARK: - Equatable

public func == (lhs: PhotoUrls, rhs: PhotoUrls) -> Bool {
    guard lhs.full == rhs.full else { return false }
    guard lhs.raw == rhs.raw else { return false }
    guard lhs.regular == rhs.regular else { return false }
    guard lhs.small == rhs.small else { return false }
    guard lhs.thumb == rhs.thumb else { return false }
    return true
}

// MARK: - Identifiable

extension PhotoUrls: Hashable, Identifiable {
    public var id: Int {
        self.hashValue
    }
}

// MARK: - RocketData

extension PhotoUrls: Model {
    public func map(_ transform: (Model) -> Model?) -> PhotoUrls? {
        return self
    }

    public func forEach(_ visit: (Model) -> Void) {
    }
}